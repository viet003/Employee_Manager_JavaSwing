/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ql_nhanvien;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Date;


/**
 *
 * @author PC
 */
public class FQL_Nhanvien extends javax.swing.JFrame {
    public int ID;
    private int ID_BP;
    //private String DL;
    /**
     * Creates new form FQl_NhanVien
     */
    public FQL_Nhanvien() {
        initComponents(); 
        Load_table();
        Load_CBB();   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel_Dangxuat = new javax.swing.JLabel();
        jLabel_Quaylai = new javax.swing.JLabel();
        Label_Quanlica = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        _Hoten = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        _SDT = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        _MaNV = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        cbb_Bophan = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        _Diachi = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        _Luong = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        _Email = new javax.swing.JTextField();
        Date_Ngaysinh = new com.toedter.calendar.JDateChooser();
        cbb_Gioitinh = new javax.swing.JComboBox<>();
        _Bophan = new javax.swing.JTextField();
        btn_Them = new javax.swing.JButton();
        btn_Sua = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        _Timkiem = new javax.swing.JTextField();
        cbb_Timkiem = new javax.swing.JComboBox<>();
        btn_timkiem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Nhanvien = new javax.swing.JTable();
        btn_Xoa = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btn_Capnhat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 51, 204));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/re/images/employee__1_-removebg-preview.png"))); // NOI18N

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Thông tin cá nhân");

        jLabel_Dangxuat.setFont(new java.awt.Font("Segoe UI Variable", 1, 18)); // NOI18N
        jLabel_Dangxuat.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Dangxuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_Dangxuat.setText("Đăng xuất");
        jLabel_Dangxuat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_Dangxuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_DangxuatMouseClicked(evt);
            }
        });

        jLabel_Quaylai.setFont(new java.awt.Font("Segoe UI Variable", 1, 18)); // NOI18N
        jLabel_Quaylai.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Quaylai.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_Quaylai.setText("Quay lại");
        jLabel_Quaylai.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_Quaylai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_QuaylaiMouseClicked(evt);
            }
        });

        Label_Quanlica.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Label_Quanlica.setForeground(new java.awt.Color(255, 255, 255));
        Label_Quanlica.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Label_Quanlica.setText("Quản lý ca làm");
        Label_Quanlica.setToolTipText("");
        Label_Quanlica.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Label_Quanlica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Label_QuanlicaMouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Quản lý bộ phận");
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Label_Quanlica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_Quaylai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_Dangxuat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 36, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(Label_Quanlica, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_Quaylai, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_Dangxuat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Nhập thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        jLabel3.setText("Họ và tên:");

        _Hoten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _HotenActionPerformed(evt);
            }
        });

        jLabel4.setText("Giới tính:");

        jLabel5.setText("Ngày sinh:");

        jLabel6.setText("Số điện thoại");

        _SDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _SDTActionPerformed(evt);
            }
        });

        jLabel7.setText("Mã nhân viên:");

        jLabel14.setText("Bộ phận:");

        cbb_Bophan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbb_BophanMouseClicked(evt);
            }
        });
        cbb_Bophan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbb_BophanActionPerformed(evt);
            }
        });

        jLabel15.setText("Địa chỉ:");

        _Diachi.setColumns(20);
        _Diachi.setRows(5);
        jScrollPane2.setViewportView(_Diachi);

        jLabel16.setText("Lương:");

        _Luong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _LuongActionPerformed(evt);
            }
        });

        jLabel17.setText("Email:");

        _Email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _EmailActionPerformed(evt);
            }
        });

        cbb_Gioitinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", "Chưa xác định" }));

        _Bophan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _BophanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(_Luong, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(_Bophan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbb_Bophan, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_SDT)
                            .addComponent(_Email)
                            .addComponent(Date_Ngaysinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbb_Gioitinh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(_Hoten))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_MaNV)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(_MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(_Hoten)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbb_Gioitinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(Date_Ngaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(_Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_SDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_Bophan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbb_Bophan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_Luong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(39, 39, 39))
        );

        btn_Them.setText("Thêm");
        btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemActionPerformed(evt);
            }
        });

        btn_Sua.setText("Sửa");
        btn_Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SuaActionPerformed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(255, 252, 252));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/re/images/tải_xuống__2_-removebg-preview.png"))); // NOI18N

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Black", 1, 18), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel10.setText("Tìm kiếm mã, họ và tên");

        _Timkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _TimkiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(_Timkiem)
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(_Timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        cbb_Timkiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã nhân viên", "Họ tên", " " }));
        cbb_Timkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbb_TimkiemActionPerformed(evt);
            }
        });

        btn_timkiem.setText("Tìm kiếm");
        btn_timkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timkiemActionPerformed(evt);
            }
        });

        jTable_Nhanvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã nhân viên", "Họ và tên", "Giới tính", "Ngày sinh", "Email", "Số điện thoại", "Địa chỉ", "Mã Bộ Phận", "Lương"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Nhanvien.setPreferredSize(new java.awt.Dimension(1385, 668));
        jTable_Nhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_NhanvienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Nhanvien);

        btn_Xoa.setText("Xóa");
        btn_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 102));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Quản lý nhân viên");

        btn_Capnhat.setText("Cập nhật");
        btn_Capnhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapnhatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btn_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_Xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_timkiem, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(cbb_Timkiem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Capnhat, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btn_Capnhat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbb_Timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btn_timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(6, 6, 6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_Sua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Them, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Xoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel_DangxuatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_DangxuatMouseClicked
        // TODO add your handling code here:
        FQL_Dangnhap dn = new FQL_Dangnhap();
        dn.setLocationRelativeTo(null);
        dn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel_DangxuatMouseClicked

    private void jLabel_QuaylaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_QuaylaiMouseClicked
        // TODO add your handling code here:
        FQL_Menu mn = new FQL_Menu();
        mn.ID = ID;
        mn.setLocationRelativeTo(null);
        mn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel_QuaylaiMouseClicked

    private void _HotenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__HotenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__HotenActionPerformed

    private void _SDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__SDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__SDTActionPerformed

    private void _EmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__EmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__EmailActionPerformed

    private void _TimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__TimkiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__TimkiemActionPerformed

    private void cbb_TimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbb_TimkiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbb_TimkiemActionPerformed

    private void btn_SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SuaActionPerformed
        // TODO add your handling code here:
        if(Check_TT()) {
            Sua();
        } 
    }//GEN-LAST:event_btn_SuaActionPerformed

    private void btn_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemActionPerformed
        // TODO add your handling code here:
        if(Check_TT()) {
            Themmoi();
        }   
    }//GEN-LAST:event_btn_ThemActionPerformed

    private void btn_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaActionPerformed
        // TODO add your handling code here:
        if(!Check_TT()) // kiểm tra xem đã chọn hàng cần xóa chưa , thông tin trống
        {
            JOptionPane.showConfirmDialog(this,"Vui lòng nhập thông tin hoặc chọn hàng cần xóa!", "Thông báo",JOptionPane.OK_OPTION);
            return;
        } else {
            if(Check_MANV()) {
                if(JOptionPane.showConfirmDialog(this, "Nhân viên đã có thông tin trong quản lý ca\n Bạn có muốn tiếp tục?","Thông báo",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    Xoa_CL();
                    Xoa();
                } else {
                    return;
                }
            } else {
                if(JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa dữ liệu không?","Thông báo",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    Xoa();                    
                } else {
                    return;
                }
            }           
        }
    }//GEN-LAST:event_btn_XoaActionPerformed
// Displaytext
    
// chọn hàng
    private void jTable_NhanvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_NhanvienMouseClicked
        // TODO add your handling code here:
        String rt = null;
        if(jTable_Nhanvien.getSelectedRow() == -1) return;
        int row = jTable_Nhanvien.getSelectedRow();
        _MaNV.setText(jTable_Nhanvien.getValueAt(row, 0).toString());
        _Hoten.setText(jTable_Nhanvien.getValueAt(row, 1).toString());
        cbb_Gioitinh.setSelectedItem(jTable_Nhanvien.getValueAt(row,2));
        try {
            int srow = jTable_Nhanvien.getSelectedRow();
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String)jTable_Nhanvien.getValueAt(srow, 3));
            Date_Ngaysinh.setDate(date);
        } catch(Exception ex) {
            JOptionPane.showConfirmDialog(this,"không thể format");
        }
        _Email.setText(jTable_Nhanvien.getValueAt(row, 4).toString());
        _SDT.setText(jTable_Nhanvien.getValueAt(row, 5).toString());
        _Diachi.setText(jTable_Nhanvien.getValueAt(row, 6).toString());
        try{
            String sql = "SELECT TENBOPHAN FROM BOPHAN WHERE MABP = '" +jTable_Nhanvien.getValueAt(row, 7)+"';";
            Connection conn = QL_Controller.getJDBCConnection();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()) {
                rt = rs.getNString(1);
            }
             conn.close();
        } catch(SQLException ex) {
            JOptionPane.showConfirmDialog(this, "Loi" + ex.getMessage());
        }
        cbb_Bophan.setSelectedItem(rt);
        _Bophan.setText(rt);
        _Luong.setText(jTable_Nhanvien.getValueAt(row, 8).toString());
    }//GEN-LAST:event_jTable_NhanvienMouseClicked

    private void _LuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__LuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__LuongActionPerformed
    // action cbb-bophan
    private void cbb_BophanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbb_BophanActionPerformed
        // TODO add your handling code here:
        if(cbb_Bophan.getSelectedIndex() != -1) {     
            _Bophan.setText(cbb_Bophan.getSelectedItem().toString());
        }
    }//GEN-LAST:event_cbb_BophanActionPerformed

    private void btn_timkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timkiemActionPerformed
        // TODO add your handling code here:
         if(!_Timkiem.getText().equals("")) {
            Timkiem();
            reText();
        } else {
            Load_table();
        }
    }//GEN-LAST:event_btn_timkiemActionPerformed

    private void Label_QuanlicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Label_QuanlicaMouseClicked
        // TODO add your handling code here:
        FQL_Calamviec cv = new FQL_Calamviec();
        cv.ID = ID;
        cv.setLocationRelativeTo(null);
        cv.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_Label_QuanlicaMouseClicked

    private void cbb_BophanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbb_BophanMouseClicked

    }//GEN-LAST:event_cbb_BophanMouseClicked

    private void btn_CapnhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CapnhatActionPerformed
        // TODO add your handling code here:
        Load_table();
    }//GEN-LAST:event_btn_CapnhatActionPerformed

    private void _BophanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__BophanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__BophanActionPerformed

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        FQL_Bophan bp = new FQL_Bophan();
        bp.ID = ID;
        bp.setLocationRelativeTo(null);
        bp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel11MouseClicked
    
    // HAM  them thong tin
    private void Themmoi() {
        if(Check_BP()) {
            String sql = "INSERT INTO NHANVIEN(MANV,HOTEN,GIOITINH,NGAYSINH,EMAIL,SDT,DIACHI,MABP,LUONG) VALUES(?,?,?,?,?,?,?,?,?)";
            
            try {
                Connection conn = QL_Controller.getJDBCConnection();
                PreparedStatement pstm = conn.prepareStatement(sql);
                
                pstm.setString(1,_MaNV.getText());
                pstm.setNString(2,_Hoten.getText());
                pstm.setNString(3,cbb_Gioitinh.getSelectedItem().toString());
                try {
                    
                    SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
                    String d = date.format(Date_Ngaysinh.getDate());
                    pstm.setString(4,d);
                } catch(Exception e) {
                    JOptionPane.showConfirmDialog(this, "Loi :" +e.getMessage());
                }
                pstm.setNString(5,_Email.getText());
                pstm.setString(6,_SDT.getText());
                pstm.setNString(7,_Diachi.getText());
                pstm.setInt(8,ID_BP);
                pstm.setString(9,_Luong.getText());

                if(JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm dữ liệu?","Thông báo",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    pstm.executeUpdate();
                    JOptionPane.showConfirmDialog(this,"Thêm thành công","Thông báo",JOptionPane.OK_OPTION);
                } else {
                    return;
                }
                Load_table();
                reText();
                conn.close();
            } catch(SQLException ex) {
                JOptionPane.showConfirmDialog(this, "Lỗi : Vui lòng kiểm tra mã nhân viên!\n" + ex.getMessage());
            }
        } else {
           if(JOptionPane.showConfirmDialog(this, "Dữ liệu không có bộ phận này. Bạn có muốn thêm mới","Thông báo",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                Insert_Bophan();
                if(Check_BP1(_Bophan.getText())) {
                    String sql = "INSERT INTO NHANVIEN(MANV,HOTEN,GIOITINH,NGAYSINH,EMAIL,SDT,DIACHI,MABP,LUONG) VALUES(?,?,?,?,?,?,?,?,?)";
                 try {
                     Connection conn = QL_Controller.getJDBCConnection();
                     PreparedStatement pstm = conn.prepareStatement(sql);

                     pstm.setString(1,_MaNV.getText());
                     pstm.setNString(2,_Hoten.getText());
                     pstm.setNString(3,cbb_Gioitinh.getSelectedItem().toString());
                     try {

                         SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
                         String d = date.format(Date_Ngaysinh.getDate());
                         pstm.setString(4,d);
                     } catch(Exception e) {
                         JOptionPane.showConfirmDialog(this, "Loi :" +e.getMessage());
                     }
                         pstm.setNString(5,_Email.getText());
                         pstm.setString(6,_SDT.getText());
                         pstm.setNString(7,_Diachi.getText());
                         pstm.setInt(8,ID_BP);
                         pstm.setString(9,_Luong.getText());
                         pstm.executeUpdate();
                         JOptionPane.showConfirmDialog(this,"Thêm thành công","Thông báo",JOptionPane.OK_OPTION);
                         Load_table();
                         conn.close();
                         cbb_Bophan.removeAllItems();
                         Load_CBB();
                         reText();
                } catch(SQLException ex) {
                     JOptionPane.showConfirmDialog(this, "Lỗi : Vui lòng kiểm tra mã nhân viên!\n" + ex.getMessage());
                }
              }
           }
        }
    }
    // Ham sua / là bảng mẹ của ca làm nên phải xóa dữ liệu của ca làm
    private void Sua() {
        if(Check_BP()) {
            String sql = "UPDATE NHANVIEN SET HOTEN = ? , GIOITINH = ?,NGAYSINH =?,EMAIL =?, SDT = ?, DIACHI =?, MABP = ?, LUONG = ? WHERE MANV = ?";
            try {
                Connection conn = QL_Controller.getJDBCConnection();
                PreparedStatement pstm = conn.prepareStatement(sql);
                pstm.setNString(1,_Hoten.getText());
                pstm.setNString(2,cbb_Gioitinh.getSelectedItem().toString());
                try {
                    
                    SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
                    String d = date.format(Date_Ngaysinh.getDate());
                    pstm.setString(3,d);
                } catch(Exception e) {
                    JOptionPane.showConfirmDialog(this, "Loi :" +e.getMessage());
                }
                pstm.setString(4,_Email.getText());
                pstm.setString(5, _SDT.getText());
                pstm.setNString(6, _Diachi.getText());
                pstm.setInt(7,ID_BP);
                pstm.setString(8 , _Luong.getText());
                pstm.setString(9,_MaNV.getText());
                
                if(JOptionPane.showConfirmDialog(this, "Bạn có muốn sửa dữ liệu?","Thông báo",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                pstm.execute();
                JOptionPane.showConfirmDialog(this,"Sửa thành công","Thông báo",JOptionPane.OK_OPTION);

                } else {
                    return;
                }
                conn.close();
            } catch(SQLException e) {
                JOptionPane.showConfirmDialog(rootPane, "Lỗi : Vui lòng kiểm tra mã nhân viên!\n" + e.getMessage()); 
            }
            Load_table();
            reText();
        } else {
            if(JOptionPane.showConfirmDialog(this, "Dữ liệu không có bộ phận này. Vui lòng sử dụng chức năng thêm mới!","Thông báo",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                Insert_Bophan();
                if(Check_BP1(_Bophan.getText())) {
                String sql = "UPDATE NHANVIEN SET HOTEN = ? , GIOITINH = ?,NGAYSINH =?,EMAIL =?, SDT = ?, DIACHI =?, MABP = ?, LUONG = ? WHERE MANV = ?";
                try {
                     Connection conn = QL_Controller.getJDBCConnection();
                     PreparedStatement pstm = conn.prepareStatement(sql);
                     pstm.setNString(1,_Hoten.getText());
                     pstm.setNString(2,cbb_Gioitinh.getSelectedItem().toString());
                     try {

                         SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
                         String d = date.format(Date_Ngaysinh.getDate());
                         pstm.setString(3,d);
                     } catch(Exception e) {
                         JOptionPane.showConfirmDialog(this, "Loi :" +e.getMessage());
                     }
                     pstm.setString(4,_Email.getText());
                     pstm.setString(5, _SDT.getText());
                     pstm.setNString(6, _Diachi.getText());
                     pstm.setInt(7,ID_BP);
                     pstm.setString(8 , _Luong.getText());
                     pstm.setString(9,_MaNV.getText());
                     pstm.execute();
                     conn.close();
                } catch(SQLException e) {
                     JOptionPane.showConfirmDialog(rootPane, "Loi :" + e.getMessage()); 
                }
                Load_table();
                cbb_Bophan.removeAllItems();
                Load_CBB();
                reText();
                }
            } else {
                JOptionPane.showConfirmDialog(this,"Loi");
            }
            
        }
    }
    // Xoa
    private void Xoa() {
        String sql = "DELETE FROM NHANVIEN WHERE MANV  =  '" + _MaNV.getText() + "'";
            try {
            Connection conn = QL_Controller.getJDBCConnection();
            Statement stm = conn.createStatement();
            stm.execute(sql);
            JOptionPane.showConfirmDialog(this,"Xóa thành công!", "Thông báo",JOptionPane.OK_OPTION);
            conn.close();
            } catch (SQLException e) {
                JOptionPane.showConfirmDialog(this,"Loi :" + e.getMessage());
            }
        Load_table();
        reText();
    }
   
    // Tim kiem
    private void Timkiem() {
        if(cbb_Timkiem.getSelectedIndex() == -1) {
            JOptionPane.showConfirmDialog(this, "Vui lựa chọn trường thông tin dùng để tìm kiếm","Thông báo",JOptionPane.OK_OPTION);
            return;
        }
        ArrayList<QL_Nhanvien> List_Nv = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel)jTable_Nhanvien.getModel();
        model.setRowCount(0);
        if(cbb_Timkiem.getSelectedIndex() == 0) {
            String sql = "SELECT * FROM NHANVIEN WHERE MANV= '" + _Timkiem.getText() + "';";
            try {
                Connection conn = QL_Controller.getJDBCConnection();
                Statement stm = conn.createStatement();
                ResultSet rs = stm.executeQuery(sql);
                
                while(rs.next()) {
                    String Manv = rs.getString(1);
                    String Hoten = rs.getNString(2);
                    String Gioitinh = rs.getNString(3);
                    String Ngaysinh = rs.getString(4);
                    String Email = rs.getString(5);
                    String Sdt = rs.getString(6);
                    String Diachi = rs.getNString(7);
                    int MaBP = rs.getInt(8);
                    String Luong = rs.getString(9);
                    QL_Nhanvien nv = new QL_Nhanvien(Manv,Hoten,Gioitinh,Ngaysinh,Email,Sdt,Diachi,Luong,MaBP);
                    List_Nv.add(nv);
                }

                for(QL_Nhanvien _ac : List_Nv) {
                    model.addRow(new Object[] {
                        _ac.getManv(),_ac.getHoten(),_ac.getGioitinh(),_ac.getNgaysinh(),_ac.getEmail(),_ac.getSdt(),_ac.getDiachi(),_ac.getMaBP(),_ac.getLuong()
                    });
                }
                conn.close();
            } catch (SQLException e) {
                JOptionPane.showConfirmDialog(this, "Loi :" + e.getMessage());
            } 
            if(cbb_Timkiem.getSelectedItem().equals("Họ tên")) {
              
                String sql1 = "SELECT * FROM NHANVIEN WHERE HOTEN LIKE '%?' OR HOTEN LIKE '?%' OR HOTEN LIKE '%?%'"; 
            try {
                Connection conn = QL_Controller.getJDBCConnection();
                PreparedStatement pstm = conn.prepareStatement(sql1);
                pstm.setNString(1,_Timkiem.getText());
                pstm.setNString(2,_Timkiem.getText());
                pstm.setNString(3,_Timkiem.getText());
                ResultSet rs = pstm.executeQuery();
                while(rs.next()) {
                    String Manv = rs.getString(1);
                    String Hoten = rs.getNString(2);
                    String Gioitinh = rs.getNString(3);
                    String Ngaysinh = rs.getString(4);
                    String Email = rs.getString(5);
                    String Sdt = rs.getString(6);
                    String Diachi = rs.getNString(7);
                    int Bophan = rs.getInt(8);
                    String Luong = rs.getString(9);
                    QL_Nhanvien nv = new QL_Nhanvien(Manv,Hoten,Gioitinh,Ngaysinh,Email,Sdt,Diachi,Luong,Bophan);
                    List_Nv.add(nv);
                }

                    for(QL_Nhanvien _ac : List_Nv) {
                        model.addRow(new Object[] {
                            _ac.getManv(),_ac.getHoten(),_ac.getGioitinh(),_ac.getNgaysinh(),_ac.getEmail(),_ac.getSdt(),_ac.getDiachi(),_ac.getMaBP(),_ac.getLuong()
                        });
                    }
                    conn.close();
                } catch (SQLException e) {
                    JOptionPane.showConfirmDialog(this, "Loi :" + e.getMessage());
                } 
            }
        }
    }
    
    // delete
    // insert bophan
    private void Insert_Bophan() {
         String sql_1 = "INSERT INTO BOPHAN(TENBOPHAN) VALUES(?)";
            try {
                Connection conn = QL_Controller.getJDBCConnection();
                PreparedStatement pstm = conn.prepareStatement(sql_1);
                
                pstm.setString(1, _Bophan.getText());
                pstm.executeUpdate();
                conn.close();
            } catch(SQLException e) {
                JOptionPane.showConfirmDialog(this,"Lỗi :" + e.getMessage());
            }
    }
    // kiem tra bp nay ton tai hay chua
    private boolean Check_BP() {
        String sql = "SELECT * FROM BOPHAN WHERE TENBOPHAN = '" + _Bophan.getText() +"'";
        
        try {
            Connection conn = QL_Controller.getJDBCConnection();
            Statement stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            
            if(rs.next()) {
                ID_BP = rs.getInt("MABP");
                return true;
            }
            conn.close();
        } catch(SQLException ex) {
            JOptionPane.showConfirmDialog(this,"Lỗi :" + ex.getMessage());
        }
        return false;
    }
    // check nhan vien da tao lich hay chua
    
    private boolean Check_MANV() {
        String sql = "SELECT * FROM CALAM WHERE MANV = '" + _MaNV.getText() +"'";
        
        try {
            Connection conn = QL_Controller.getJDBCConnection();
            Statement stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            
            if(rs.next()) {
                return true;
            }
            conn.close();
        } catch(SQLException ex) {
            JOptionPane.showConfirmDialog(this,"Lỗi :" + ex.getMessage());
        }
        return false;
    }
    
    // Xoa ca lam / thực hiện khi nhân viên đã cập nhật lịch làm việc
    private void Xoa_CL() {
        String sql = "DELETE FROM CALAM WHERE MANV = '" + _MaNV.getText() +"'";
        try {
            Connection conn = QL_Controller.getJDBCConnection();
            Statement stm = conn.createStatement();
            stm.execute(sql);
        } catch(SQLException ex) {
            JOptionPane.showConfirmDialog(this, ex.getMessage());
        }
    }
    // check xem bộ phận đã tồn tại trong csdl bộ phận hay chưa -> chưa thì thêm
    private boolean Check_BP1( String BP) {
        String sql = "SELECT * FROM BOPHAN WHERE TENBOPHAN = '" + BP +"'";
        
        try {
            Connection conn = QL_Controller.getJDBCConnection();
            Statement stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            
            if(rs.next()) {
                ID_BP = rs.getInt("MABP");
                return true;
            }
            conn.close();
        } catch(SQLException ex) {
            JOptionPane.showConfirmDialog(this,"Lỗi :" + ex.getMessage());
        }
        return false;
    }
    // tao moi o text // set toàn bộ ký tự trong text thành ""(rỗng)
    private void reText() {
        _MaNV.setText("");
        _Hoten.setText("");
        cbb_Gioitinh.setSelectedIndex(0);
        //Date_Ngaysinh.setDateFormatString("");
        _Email.setText("");
        _SDT.setText("");
        _Diachi.setText("");
        cbb_Bophan.setSelectedIndex(0);
        _Luong.setText("");
    }
    // kiem tra ký tự dạng số (áp dụng cho lương và số điện thoại)
    private Long Check_Number(String value) {
        try {
            return Long.parseLong(value);
        } catch (NumberFormatException e) {
            return null;
        }           
    }
    // kiem tra thong tin : kiểm tra xem tất cả các ô thông tin có dữ liệu chưa
    private boolean Check_TT() {
        if ( _MaNV.getText().equals("") || _Hoten.getText().equals("") || Date_Ngaysinh.getDateFormatString().equals("") || 
                _Email.getText().equals("") || _SDT.getText().equals("") || _Diachi.getText().equals("") || _Luong.getText().equals(""))
        {
                JOptionPane.showConfirmDialog(this,"Vui lòng điền đày đủ thông tin!","Thông báo",JOptionPane.OK_OPTION);
            return false;
        } else {
            if (Check_Number(_SDT.getText()) == null) {
                JOptionPane.showConfirmDialog(this,"Số điện thoại không bao gồm ký tự chữ","Thông báo",JOptionPane.OK_OPTION);
                return false;
            }
            if (Check_Number(_Luong.getText()) == null) {
                JOptionPane.showConfirmDialog(this,"Lương không bao gồm ký tự chữ","Thông báo",JOptionPane.OK_OPTION);
                return false;
            }
            /*if(!_Email.getText().toUpperCase().contains("@gmail.com")) {
                JOptionPane.showConfirmDialog(this,"Email phải bao gồm :@gmail.com","Thông báo",JOptionPane.OK_OPTION);
                return false;
            }*/
        }
        return true;
    }
    // Đổ dữ liệu vào bảng
    private void Load_table() {
        String sql = "SELECT* FROM NHANVIEN ORDER BY MANV;";
        ArrayList<QL_Nhanvien> List_Nv = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel)jTable_Nhanvien.getModel();
        model.setRowCount(0);
        try {
            Connection conn = QL_Controller.getJDBCConnection();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            // đọc dữ liệu vào list
            while(rs.next()) {
                String Manv = rs.getString(1);
                String Hoten = rs.getNString(2);
                String Gioitinh = rs.getNString(3);
                String Ngaysinh = rs.getString(4);
                String Email = rs.getString(5);
                String Sdt = rs.getString(6);
                String Diachi = rs.getNString(7);
                int MaBP = rs.getInt(8);
                String Luong = rs.getString(9);
                QL_Nhanvien nv = new QL_Nhanvien(Manv,Hoten,Gioitinh,Ngaysinh,Email,Sdt,Diachi,Luong,MaBP);
                List_Nv.add(nv);
            }
            
            for(QL_Nhanvien _ac : List_Nv) {
                model.addRow(new Object[] {
                    _ac.getManv(),_ac.getHoten(),_ac.getGioitinh(),_ac.getNgaysinh(),_ac.getEmail(),_ac.getSdt(),_ac.getDiachi(),_ac.getMaBP(),_ac.getLuong()
                });
            }
            conn.close();
        } catch(SQLException ex) {
            JOptionPane.showInputDialog(this,"Lỗi" + ex.getMessage());
        }
    }
 // Đổ dữ liệu vào combobox bo phan
    private void Load_CBB() {
        String sql = "SELECT TENBOPHAN FROM BOPHAN";
        ArrayList<String> List_cbb = new ArrayList<>();
        try {
            Connection conn = QL_Controller.getJDBCConnection();
            Statement stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while(rs.next()) {
                String bophan = rs.getNString(1);
                
                List_cbb.add(bophan);
            }
            for(String bp : List_cbb) {
                cbb_Bophan.addItem(bp);
            }
            conn.close();
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(this,"Lỗi" + ex.getMessage());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FQL_Nhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FQL_Nhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FQL_Nhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FQL_Nhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FQL_Nhanvien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Date_Ngaysinh;
    private javax.swing.JLabel Label_Quanlica;
    private javax.swing.JTextField _Bophan;
    private javax.swing.JTextArea _Diachi;
    private javax.swing.JTextField _Email;
    private javax.swing.JTextField _Hoten;
    private javax.swing.JTextField _Luong;
    private javax.swing.JTextField _MaNV;
    private javax.swing.JTextField _SDT;
    private javax.swing.JTextField _Timkiem;
    private javax.swing.JButton btn_Capnhat;
    private javax.swing.JButton btn_Sua;
    private javax.swing.JButton btn_Them;
    private javax.swing.JButton btn_Xoa;
    private javax.swing.JButton btn_timkiem;
    private javax.swing.JComboBox<String> cbb_Bophan;
    private javax.swing.JComboBox<String> cbb_Gioitinh;
    private javax.swing.JComboBox<String> cbb_Timkiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_Dangxuat;
    private javax.swing.JLabel jLabel_Quaylai;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_Nhanvien;
    // End of variables declaration//GEN-END:variables
}
