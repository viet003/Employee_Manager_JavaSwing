/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ql_nhanvien;
import java.sql.Statement;
import java.util.logging.Level;
import java.sql.Connection;
import java.util.logging.Logger;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.io.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Admin
 */
public class FQL_Taikhoan extends javax.swing.JFrame {
    QL_Controller control = null;
    public int ID;
    int SelectedID = -1; // chưa được chọn
    /**
     * Creates new form Ql_Taikhoan
     */
    public FQL_Taikhoan() {
        initComponents();
        control = new QL_Controller();
        Load_table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Account = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TK = new javax.swing.JTextField();
        MK = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Name = new javax.swing.JTextField();
        cbb_Loai = new javax.swing.JComboBox<>();
        jButton_Themmoi = new javax.swing.JButton();
        jButton_Sua = new javax.swing.JButton();
        jButton_Xoa = new javax.swing.JButton();
        jButton_Capnhat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/re/images/hr.png"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Tài khoản");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Quay lại");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jTable_Account.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Tài khoản", "Mật khẩu", "Họ tên", "Quyền truy cập"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Account.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_AccountMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Account);

        jLabel1.setText("Tài khoản:");

        jLabel2.setText("Mật khẩu:");

        jLabel3.setText("Họ tên:");

        jLabel4.setText("Loại tài khoản :");

        Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameActionPerformed(evt);
            }
        });

        cbb_Loai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ADMIN", "Quản lý" }));
        cbb_Loai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbb_LoaiActionPerformed(evt);
            }
        });

        jButton_Themmoi.setText("Thêm mới");
        jButton_Themmoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ThemmoiActionPerformed(evt);
            }
        });

        jButton_Sua.setText("Sửa");
        jButton_Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SuaActionPerformed(evt);
            }
        });

        jButton_Xoa.setText("Xóa");
        jButton_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_XoaActionPerformed(evt);
            }
        });

        jButton_Capnhat.setText("Cập nhật");
        jButton_Capnhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CapnhatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TK)
                            .addComponent(MK, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Name)
                            .addComponent(cbb_Loai, 0, 238, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton_Themmoi, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(jButton_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton_Xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jButton_Capnhat, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TK, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MK, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbb_Loai))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Themmoi, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jButton_Sua)
                    .addComponent(jButton_Xoa)
                    .addComponent(jButton_Capnhat))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameActionPerformed

    private void cbb_LoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbb_LoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbb_LoaiActionPerformed
// button them
    private void jButton_ThemmoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ThemmoiActionPerformed
        // TODO add your handling code here:
        if(check()) {
             JOptionPane.showConfirmDialog(this,"Vui lòng nhập đầy đủ thông tin","Thông báo",JOptionPane.OK_OPTION);
             return;
        }
        if(check_TK()) {
            JOptionPane.showConfirmDialog(this,"Tài khoản đã tồn tại","Thông báo",JOptionPane.OK_OPTION);
            return;
        }
        Them();
        Load_table();
    }//GEN-LAST:event_jButton_ThemmoiActionPerformed

    private void jButton_CapnhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CapnhatActionPerformed
        // TODO add your handling code here:
        Load_table();
        JOptionPane.showConfirmDialog(this,"Cập nhật thành công!","Thông báo",JOptionPane.OK_OPTION);
    }//GEN-LAST:event_jButton_CapnhatActionPerformed
// đổ dữ liệu vào các ô khi đã chọn
    private void jTable_AccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_AccountMouseClicked
        // TODO add your handling code here:
        if(jTable_Account.getSelectedRow() == -1) return;
        int row = jTable_Account.getSelectedRow();
        SelectedID = Integer.parseInt(jTable_Account.getValueAt(row,0).toString());
        TK.setText(jTable_Account.getValueAt(row, 1).toString());
        MK.setText(jTable_Account.getValueAt(row, 2).toString());
        Name.setText(jTable_Account.getValueAt(row, 3).toString());
        cbb_Loai.setSelectedItem(jTable_Account.getValueAt(row, 4).toString());
    }//GEN-LAST:event_jTable_AccountMouseClicked

    private void jButton_SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SuaActionPerformed
        // TODO add your handling code here:
        if(jTable_Account.getSelectedRow() == -1) {
            JOptionPane.showConfirmDialog(this,"Vui lòng lựa chọn hàng muốn sửa!","Thông báo",JOptionPane.OK_OPTION);
            return;
        }
        Sua();
        Load_table();
    }//GEN-LAST:event_jButton_SuaActionPerformed

    private void jButton_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XoaActionPerformed
        // TODO add your handling code here:
       if(jTable_Account.getSelectedRow() == -1) {
            JOptionPane.showConfirmDialog(this,"Vui lòng lựa chọn hàng muốn xóa!","Thông báo",JOptionPane.OK_OPTION);
            return;
        }
        Xoa();
        Load_table();
    }//GEN-LAST:event_jButton_XoaActionPerformed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        FQL_Menu mn = new FQL_Menu();
        mn.setLocationRelativeTo(null);
        mn.ID = ID;
        mn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel7MouseClicked
    
    // đổ dữ liệu vào table;
    public void Load_table() {
        String sql = "SELECT * FROM ACCOUNT";
        ArrayList<QL_Account> List_Ac = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel)jTable_Account.getModel();
        model.setRowCount(0);
        try {
            Connection conn = QL_Controller.getJDBCConnection();
            Statement st = conn.createStatement(); // tạo câu lệnh truy vấn
            ResultSet rs = st.executeQuery(sql);
            // đọc dữ liệu vào list
            while(rs.next()) {
                int ID = rs.getInt("ID");
                String user = rs.getString("USER");
                String pass = rs.getString("PASS");
                String name = rs.getNString("NAME");
                String quyen = rs.getNString("QUYEN");
                QL_Account ac = new QL_Account(ID,user,pass,name,quyen);
                List_Ac.add(ac);
            }
            // đọc dữ liệu vào table
            for(QL_Account _ac : List_Ac) {
                model.addRow(new Object[] {
                    _ac.getID(),_ac.getUser(),_ac.getPass(),_ac.getName(),_ac.getQuyen()
                });
            }
            conn.close();
        } catch(SQLException ex) {
            JOptionPane.showInputDialog(this,"Lỗi" + ex.getMessage());
        }
    }
    // Thêm dữ liệu
    public void Them() {
        String sql = "INSERT INTO ACCOUNT(USER,PASS,NAME,QUYEN) VALUES(?,?,?,?)";
        try {
            Connection conn = QL_Controller.getJDBCConnection();
            PreparedStatement pstm = conn.prepareStatement(sql);
            pstm.setString(1,TK.getText());
            pstm.setString(2, MK.getText());
            pstm.setNString(3, Name.getText());
            pstm.setNString(4,cbb_Loai.getSelectedItem().toString());
            if(JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm dữ liệu?","Thông báo",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
               JOptionPane.showConfirmDialog(this,"Thêm thành công","Thông báo",JOptionPane.OK_OPTION);
            } else {
                return;
            }
             pstm.executeUpdate();
            conn.close();
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(this,"Lỗi :" + ex.getMessage());
        }
    }
    // Sua
    private void Sua() {
        String sql = "UPDATE ACCOUNT SET USER = ?, PASS = ?, NAME = ?, QUYEN = ? WHERE ID = ?;";
        try {
            Connection conn = QL_Controller.getJDBCConnection();
            PreparedStatement pstm = conn.prepareStatement(sql);
            pstm.setString(1,TK.getText());
            pstm.setString(2, MK.getText());
            pstm.setNString(3, Name.getText());
            pstm.setNString(4,cbb_Loai.getSelectedItem().toString());
            pstm.setInt(5,SelectedID);
            if(JOptionPane.showConfirmDialog(this, "Bạn có muốn sửa dữ liệu?","Thông báo",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                pstm.execute();
                JOptionPane.showConfirmDialog(this,"Sửa thành công","Thông báo",JOptionPane.OK_OPTION);

            } else {
                return;
            }
            conn.close();
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(this, "Lỗi:" + ex.getMessage());
        }
    }
    // Xoa
    private void Xoa() {
        String sql = "DELETE FROM ACCOUNT WHERE ID = ?";
        try {
            Connection conn = QL_Controller.getJDBCConnection();
            PreparedStatement pstm = conn.prepareStatement(sql);
            pstm.setInt(1,SelectedID);
            if(JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa dữ liệu?","Thông báo",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                JOptionPane.showConfirmDialog(this,"Xóa thành công","Thông báo",JOptionPane.OK_OPTION);
            } else {
                return;
            }
            pstm.execute();
            conn.close();
        } catch(SQLException ex) {
            JOptionPane.showConfirmDialog(this,"Lỗi :" + ex.getMessage());
        }
    }    
    // Check thong tin
    private boolean check() {
        if(TK.getText().equals("") || MK.getText().equals("")|| Name.getText().equals("") || cbb_Loai.getSelectedIndex() == -1) {
            return true;
        }
        return false;
    }
    // kiểm tra xem tài khoản tồn tại hay chưa
    private boolean check_TK() {
       String sql = "SELECT * FROM ACCOUNT WHERE USER = ?";
       try {
           Connection conn = QL_Controller.getJDBCConnection();
           PreparedStatement pstm = conn.prepareStatement(sql);
           pstm.setString(1, TK.getText());
           ResultSet rs = pstm.executeQuery();
            
            if(rs.next()){
               
                return true;
            } else {
                return false;
            }
       } catch (SQLException ex) {
           JOptionPane.showInputDialog(this,"Lỗi" + ex.getMessage());
       }
       return false;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FQL_Taikhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FQL_Taikhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FQL_Taikhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FQL_Taikhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FQL_Taikhoan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField MK;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField TK;
    private javax.swing.JComboBox<String> cbb_Loai;
    private javax.swing.JButton jButton_Capnhat;
    private javax.swing.JButton jButton_Sua;
    private javax.swing.JButton jButton_Themmoi;
    private javax.swing.JButton jButton_Xoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Account;
    // End of variables declaration//GEN-END:variables
}
